plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java-library'
	id 'maven-publish'
	id 'java'
}

apply plugin: 'maven-publish'

group = 'com.github.Hazem-Ben-Khalfallah'
if (project.hasProperty('buildVersion')) {
	project.version = project.buildVersion
} else {
	project.version = '0.4.0'
}
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	mavenLocal()
}


dependencies {
	api 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	api 'org.aspectj:aspectjweaver:1.9.7'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.testcontainers:junit-jupiter:1.15.3'
	testImplementation 'com.github.javafaker:javafaker:1.0.2'
}

bootJar {
	enabled = false
}

jar {
	enabled = true
	archiveClassifier = ''
	//required for testing, but not in final lib jar package
	exclude 'com/vsware/libraries/redisreactivecache/RedisReactiveCacheApplication.class'
}

test {
	useJUnitPlatform()
}

publishing {
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/Hazem-Ben-Khalfallah/redis-reactive-cache")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
				password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
			}
		}
	}
	publications {
		maven(MavenPublication) {
			groupId = "${group}"
			artifactId = "${rootProject.name}"
			version = "${project.version}"

			from components.java
		}
	}
}
